version: '3.9'

networks:
  cspg-network:
    name: cspg-network

volumes:
  cspg-worker-volume:
    name: cspg-worker-volume
  cspg-rabbitmq-volume:
    name: cspg-rabbitmq-volume
  cspg-minio-volume:
    name: cspg-minio-volume

x-logging: &formatted-logging
  driver: json-file
  options:
    tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'
    max-size: '10m'
    max-file: '3'
    mode: 'non-blocking'
    max-buffer-size: '4m'

x-cspg-rabbitmq-envs: &cspg-rabbitmq-envs
  RABBITMQ_HOST: ${RABBITMQ_HOST:-0.0.0.0}
  RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
  RABBITMQ_USER: ${RABBITMQ_USER:-rabbitmq}
  RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-rabbitmq}

x-cspg-minio-envs: &cspg-minio-envs
  S3_HOST: ${MINIO_HOST:-0.0.0.0}
  S3_PORT: ${MINIO_PORT:-9000}
  S3_ACCESS_KEY_ID: ${MINIO_USER:-minio}
  S3_SECRET_ACCESS_KEY: ${MINIO_PASSWORD:-minio}
  S3_BUCKET: ${MINIO_BUCKET:-cspg_service}
  S3_OUTPUTS_PATH: ${MINIO_OUTPUTS_PATH:-outputs}

x-cspg-worker-envs: &cspg-service-envs
  WORKERS: ${WORKERS}
  PORT: ${PORT}
  API_KEY: ${API_KEY}
  MODELPATH: ${MODELPATH}
  SD_PROMPT_MASK: ${SD_PROMPT_MASK}
  SD_NEGATIVE_PROMPT: ${SD_NEGATIVE_PROMPT}
  SD_CFG: ${SD_CFG}
  RABBITMQ_CH_NUMBER: ${RABBITMQ_CH_NUMBER}
  RABBITMQ_REQUEST_QUEUE: ${RABBITMQ_REQUEST_QUEUE}
  RABBITMQ_RESPONSE_QUEUE: ${RABBITMQ_RESPONSE_QUEUE}

services:
  cspg-worker:
    container_name: cspg-worker
    image: cspg-worker
    build:
      context: ./worker
      dockerfile: Dockerfile
    tty: true
    restart: always
    healthcheck:
      test: curl -f http://0.0.0.0:5000/healthcheck
      interval: 10s
      timeout: 5s
      retries: 10
    environment:
      <<: [*cspg-service-envs, *cspg-rabbitmq-envs, *cspg-minio-envs]
    volumes:
      - cspg-worker-volume:/cspg_model
    logging: *formatted-logging
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - cspg-network

  cspg-rabbitmq:
    container_name: cspg_rabbitmq
    image: rabbitmq:3.12.1-management
    ports:
      - '${RABBITMQ_UI_EXPOSED_PORT:-15672}:15672'
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit consumer_timeout 72000000
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 10
    logging: *formatted-logging
    volumes:
      - cspg-rabbitmq-volume:/var/lib/rabbitmq
    networks:
      - cspg-network

  cspg-minio:
    container_name: cspg-minio
    image: minio/minio:latest
    entrypoint: minio server --address ":9000" --console-address ":9001" /data
    ports:
      - '${MINIO_UI_EXPOSED_PORT:-9001}:9001'
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
      MINIO_PROMETHEUS_AUTH_TYPE: 'public'
      MINIO_UPDATE: 'off'
    healthcheck:
      test: curl -f http://0.0.0.0:9000/minio/health/live
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - cspg-minio-volume:/data
    logging: *formatted-logging
    networks:
      - cspg-network
